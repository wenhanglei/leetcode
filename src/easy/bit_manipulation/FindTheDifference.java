package easy.bit_manipulation;
/**
 * Given two strings s and t which consist of only lowercase letters.
 * String t is generated by random shuffling string s and 
 * then add one more letter at a random position.
 * Find the letter that was added in t.
 * @author wenhanglei
 */
public class FindTheDifference {
	/*
	 * 思路：
	 * 使用频率数组保存字符串s中已经出现的字符的次数
	 * 在遍历字符串t找到新添加的字符
	 */
	public char findTheDifference(String s, String t) {
        int[] freq = new int[26];
        for(int i = 0; i < s.length(); i++)
        	freq[s.charAt(i)-'a']++;
        for(int i = 0; i < t.length(); i++){
        	char ch = t.charAt(i);
        	if(freq[ch-'a']==0) return ch;
        	else freq[ch-'a']--;
        }
        return 'a';
    }
	
	/**
	 * 测试函数
	 */
	public static void main(String[] args) {
		FindTheDifference sol = new FindTheDifference();
		char ret = sol.findTheDifference("abcd", "abcde");
		System.out.println(ret);
	}
}
